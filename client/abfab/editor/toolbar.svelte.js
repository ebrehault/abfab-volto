/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	listen,
	mount_component,
	noop,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "/~/libs/svelte/internal/index.mjs";

import AFButton from "/~/abfab/ui/button.svelte";
import AFDropdown from "/~/abfab/ui/dropdown.svelte";
import { AbFabStore } from "../core.js";
import { EditorStore } from "./editor.js";

function add_css() {
	var style = element("style");
	style.id = "svelte-k5zqlc-style";
	style.textContent = "nav.svelte-k5zqlc{width:3em}ul.svelte-k5zqlc{list-style-type:none;margin:0;padding:0;text-align:center;display:flex;flex-direction:column;height:100%}li.svelte-k5zqlc{padding:0.5em 0}.more-button.svelte-k5zqlc{margin-top:auto;position:absolute;bottom:0em;left:0.75em}.menu-item.svelte-k5zqlc{padding:0.25em 1em;width:10em;cursor:pointer}";
	append(document.head, style);
}

// (30:12) <AFButton kind="primary" aspect="basic" icon="folder" size="small"                       active={showNavigation} on:click={toggleNavigation}>
function create_default_slot_2(ctx) {
	let t;

	return {
		c() {
			t = text("Explore");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (34:12) <AFButton kind="primary" aspect="basic" icon="search" size="small">
function create_default_slot_1(ctx) {
	let t;

	return {
		c() {
			t = text("Search");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (37:12) <AFDropdown label="Settings" toTop={true}>
function create_default_slot(ctx) {
	let div;
	let mounted;
	let dispose;

	return {
		c() {
			div = element("div");
			div.textContent = "Log out";
			attr(div, "class", "menu-item svelte-k5zqlc");
		},
		m(target, anchor) {
			insert(target, div, anchor);

			if (!mounted) {
				dispose = listen(div, "click", /*logout*/ ctx[1]);
				mounted = true;
			}
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(div);
			mounted = false;
			dispose();
		}
	};
}

function create_fragment(ctx) {
	let nav;
	let ul;
	let li0;
	let afbutton0;
	let t0;
	let li1;
	let afbutton1;
	let t1;
	let li2;
	let afdropdown;
	let current;

	afbutton0 = new AFButton({
			props: {
				kind: "primary",
				aspect: "basic",
				icon: "folder",
				size: "small",
				active: /*showNavigation*/ ctx[0],
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			}
		});

	afbutton0.$on("click", /*toggleNavigation*/ ctx[2]);

	afbutton1 = new AFButton({
			props: {
				kind: "primary",
				aspect: "basic",
				icon: "search",
				size: "small",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			}
		});

	afdropdown = new AFDropdown({
			props: {
				label: "Settings",
				toTop: true,
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	return {
		c() {
			nav = element("nav");
			ul = element("ul");
			li0 = element("li");
			create_component(afbutton0.$$.fragment);
			t0 = space();
			li1 = element("li");
			create_component(afbutton1.$$.fragment);
			t1 = space();
			li2 = element("li");
			create_component(afdropdown.$$.fragment);
			attr(li0, "class", "svelte-k5zqlc");
			attr(li1, "class", "svelte-k5zqlc");
			attr(li2, "class", "more-button svelte-k5zqlc");
			attr(ul, "class", "svelte-k5zqlc");
			attr(nav, "class", "svelte-k5zqlc");
		},
		m(target, anchor) {
			insert(target, nav, anchor);
			append(nav, ul);
			append(ul, li0);
			mount_component(afbutton0, li0, null);
			append(ul, t0);
			append(ul, li1);
			mount_component(afbutton1, li1, null);
			append(ul, t1);
			append(ul, li2);
			mount_component(afdropdown, li2, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const afbutton0_changes = {};
			if (dirty & /*showNavigation*/ 1) afbutton0_changes.active = /*showNavigation*/ ctx[0];

			if (dirty & /*$$scope*/ 8) {
				afbutton0_changes.$$scope = { dirty, ctx };
			}

			afbutton0.$set(afbutton0_changes);
			const afbutton1_changes = {};

			if (dirty & /*$$scope*/ 8) {
				afbutton1_changes.$$scope = { dirty, ctx };
			}

			afbutton1.$set(afbutton1_changes);
			const afdropdown_changes = {};

			if (dirty & /*$$scope*/ 8) {
				afdropdown_changes.$$scope = { dirty, ctx };
			}

			afdropdown.$set(afdropdown_changes);
		},
		i(local) {
			if (current) return;
			transition_in(afbutton0.$$.fragment, local);
			transition_in(afbutton1.$$.fragment, local);
			transition_in(afdropdown.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(afbutton0.$$.fragment, local);
			transition_out(afbutton1.$$.fragment, local);
			transition_out(afdropdown.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(nav);
			destroy_component(afbutton0);
			destroy_component(afbutton1);
			destroy_component(afdropdown);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let showNavigation = false;

	function logout() {
		AbFabStore.update(state => ({ ...state, logged: false }));
	}

	function toggleNavigation() {
		EditorStore.update(state => {
			$$invalidate(0, showNavigation = !state.showNavigation);
			return { ...state, showNavigation };
		});

		window.dispatchEvent(new Event("resize"));
	}

	return [showNavigation, logout, toggleNavigation];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-k5zqlc-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Component;